{"version":3,"sources":["components/service-context/index.js","utils/getHoursAgo.js","components/hoc/with-service.js","components/jumbotron/categories-list.js","components/joke-box/index.js","components/joke-box/joke-box.js","components/jumbotron/search.js","components/item-list/index.js","components/item-list/item-list.js","components/jumbotron/index.js","components/jumbotron/jumbotron.js","components/side-bar/index.js","components/side-bar/side-bar.js","components/app/app.js","components/app/index.js","index.js","services/chuckNorrisService.js"],"names":["React","createContext","Provider","Consumer","getHoursAgo","stringDate","date","Date","Math","floor","getTime","withService","Wrapped","props","value","service","CategoriesList","Allcategories","onOptionsAdded","useState","categories","setCategories","onHandleClick","e","target","innerHTML","id","item","find","itemIndex","findIndex","newItem","active","newCategories","slice","selectedCategory","label","className","map","category","index","key","onClick","JokeBox","jokeData","onFlagChange","joke","hoursAgo","clazz","favorite","href","Search","handleChange","setLabel","type","placeholder","onChange","ItemList","dataList","renderItem","items","itemProp","Jumbotron","data","onJokesAdded","activeRadio","setActiveRadio","useEffect","fetchCategories","getCategories","getRandomJoke","getJokeByCategory","getJokeBySearch","then","onChangeRadio","categoriesViewData","forEach","push","console","log","categoriesView","searchView","name","SideBar","state","favoriteList","updateList","filteredList","filter","setState","onToggle","wrapperRef","current","classList","toggle","createRef","prevProps","this","ref","Component","App","jokesData","fetchOptions","fetchJoke","newData","indexJoke","el","updateData","ReactDOM","render","StrictMode","_apiBase","getResource","url","a","fetch","response","json","_transformData","updated_at","res","query","document","getElementById"],"mappings":"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","file":"static/js/main.04d07a39.chunk.js","sourcesContent":["import React from 'react';\n\nconst { Provider, Consumer } = React.createContext();\n\nexport { \n    Provider, \n    Consumer \n}","export const getHoursAgo = (stringDate) => {\n  \n    const date = new Date(stringDate);\n\n    const currentHoursFrom1970 = Math.floor(new Date().getTime()/1000/3600);\n    const customHoursFrom1970 = Math.floor(date.getTime()/1000/3600);\n   \n    return currentHoursFrom1970 - customHoursFrom1970;\n   \n }","import React from 'react';\nimport { Consumer } from '../service-context';\n\nconst withService = () => (Wrapped) => {\n    return (props) => { \n        return (\n            <Consumer>\n                {\n                    (value) => {\n                        return <Wrapped {...props} service={value} />\n                    }\n                }\n            </Consumer>\n        );\n    }\n}\n\nexport {\n    withService\n}\n\n","import React, { useState, useEffect } from 'react';\n\nimport './jumbotron.css';\n\nconst CategoriesList = ({ Allcategories, onOptionsAdded }) => {\n\n    const initialState = {value: '', active: false};\n    const [categories, setCategories] = useState(Allcategories);\n    \n    const onHandleClick = (e) => {\n        let {id, innerHTML} = e.target;\n        \n        const item = Allcategories.find(e => e.value === innerHTML);\n        const itemIndex = Allcategories.findIndex(e => e.value === innerHTML);\n       \n        const newItem = {\n            value: item.value, active: true\n        }\n\n        const newCategories= [...Allcategories.slice(0, itemIndex), newItem, ...Allcategories.slice(itemIndex + 1)];\n        setCategories(newCategories);\n        onOptionsAdded({\n            selectedCategory: item.value,\n            label: ''\n        })\n    }\n\n    const spanClass = 'category';\n\n    return (\n        <div className=\"categories-wrap\">\n            {\n            categories.map((category, index) => {\n                    return (\n                        <span \n                        key={index} \n                        id={category.active ? \"category-active\" : \"category\"}\n                        onClick={onHandleClick}> \n                            {category.value}\n                        </span>\n                    );\n                })\n            }                \n        </div>\n    );\n}\n\nexport default CategoriesList;\n\n","import JokeBox from './joke-box';\n\nexport default JokeBox;","import React, { useState } from 'react';\nimport { withService } from '../hoc';\n\nimport CategoriesList from '../jumbotron/categories-list';\nimport './joke-box.css';\n\nconst JokeBox = ({ jokeData, onFlagChange }) => {\n\n    const { id, joke, hoursAgo, category, favorite } = jokeData;\n\n    const clazz = favorite ? 'fas' : 'far';\n\n    const onHandleClick = () => {\n        onFlagChange(id);\n    }\n\n    return (\n        <div className=\"wrap-box\">\n            <div className=\"joke-box\">\n                <span id=\"secondary-text\">\n                    ID: <a href=\"/\">\n                            {id}\n                        </a>\n                </span>\n                <p>\n                    {joke}\n                </p>\n\n                <div className=\"bottom-line\">\n                    <div className=\"secondary-text-wrap\">\n                        <span id=\"secondary-text\">\n                            Last update: {hoursAgo} hours ago\n                        </span>\n                    </div>\n                    <div className=\"categories-wrap\">\n                        <span id=\"category-disabled\">{category}</span>\n                    </div>\n                </div>\n\n            </div>\n            <i className=\"message-icon far fa-comment-alt\"></i>\n            <i \n            className={'heart-icon fa-heart ' + clazz}\n            onClick={onHandleClick}>\n            </i>\n            \n        </div>\n    );\n}\n\nexport default JokeBox;\n\n","import React, { useState } from 'react';\n\nimport './jumbotron.css';\n\nconst Search = ({handleChange}) => {\n\n    const [ label, setLabel ] = useState('');\n\n    const handler = ({target: {value}}) => {\n        handleChange(value)\n        setLabel(value);\n    }\n\n    return (\n        <input \n        className=\"search-input\"  \n        type=\"search\" \n        placeholder=\"Free text search...\"\n        value={label} \n        onChange={handler}>\n        </input>\n    );\n}\n\nexport default Search;\n\n","import ItemList from './item-list';\n\nexport default ItemList;","import React, { useState, Children } from 'react';\nimport './item-list.css';\n\nconst ItemList = ({ dataList, renderItem }) => {\n    \n    const items = dataList.map((itemProp, index) => {\n        return renderItem(itemProp)\n    });\n\n    return (\n        <div className=\"items-wrap\">\n            {items}\n        </div>\n    );\n}\n\nexport default ItemList;\n\n","import Jumbotron from './jumbotron';\nimport CategoriesList from './categories-list';\nimport Search from './search';\n\nexport default Jumbotron;\nexport {\n    CategoriesList, Search\n}","import React, { useState, useEffect } from 'react';\n\nimport './jumbotron.css';\n\nimport { withService } from '../hoc';\nimport JokeBox from '../joke-box';\nimport CategoriesList from './categories-list';\nimport Search from './search';\nimport { act } from 'react-dom/test-utils';\nimport ItemList from '../item-list';\n\nconst Jumbotron = ({data, service, onJokesAdded, onOptionsAdded}) => {\n\n    const [ activeRadio, setActiveRadio ] = useState();\n    const [checkView, setCheckView] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [activeCategory, setActiveCategory] = useState([]);\n    const [label, setLabel] = useState('');\n\n    useEffect(() => {\n        fetchCategories();\n    }, [])\n\n\n    const { getCategories, getRandomJoke, getJokeByCategory, getJokeBySearch } = service;\n\n    const fetchCategories = () => {\n        getCategories().then(data => setCategories(data.slice(0,4)));\n    }\n\n    const onChangeRadio = (e) => {\n\n        switch (e.target.id) {\n            \n            case 'random':\n                setActiveRadio('random')\n            break;\n\n            case 'categories':\n                setActiveRadio('categories') \n            break;\n\n            case 'search':\n                setActiveRadio('search')\n            break;\n            \n            default: \n                return 'random';\n        }\n    }\n\n    const categoriesViewData = [];\n\n    categories.forEach((category) => {\n        categoriesViewData.push(\n            {\n                value: category,\n                active: false\n            }\n        )});\n\n    console.log(categoriesViewData);\n\n    const categoriesView = <CategoriesList Allcategories={categoriesViewData} onOptionsAdded={onOptionsAdded}/>;\n\n    const searchView = <Search handleChange={(label) => onOptionsAdded({selectedCategory: '', label})}/>;\n\n    return (\n        <div className=\"jumbotron\">\n            <span id=\"logo\">MSI 2020</span>\n            <h1 onClick={(e) => console.log(e.target.value)}>Hey!</h1>\n            <h2>Let’s try to find a joke for you:</h2>\n\n            <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"random\"\n                    onChange={onChangeRadio}></input>\n                    <span>Random</span>\n                </label>\n            </div>\n            <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"categories\"\n                    onChange={onChangeRadio}></input>\n                    <span>From categories</span>\n                </label>\n            </div>\n\n            {activeRadio === \"categories\" &&  categoriesView }\n\n            <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"search\"\n                    onChange={onChangeRadio}></input>\n                    <span>Search</span>\n                </label>\n            </div>\n\n            {activeRadio === \"search\" &&  searchView}\n\n        </div>        \n    );\n}\n\nexport default withService()(Jumbotron);\n\n","import SideBar from './side-bar';\n\nexport default SideBar;","import React, { Component } from 'react';\n\nimport './side-bar.css';\nimport ItemList from '../item-list';\nimport JokeBox from '../joke-box';\n\nclass SideBar extends Component {\n\n    state = {\n        favoriteList: [],\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.data !== prevProps.data) {\n            this.updateList()\n        }\n    }\n\n    updateList = () => {\n        const { data } = this.props;\n        const filteredList = data.filter(e => e.favorite);\n        this.setState({\n            favoriteList: filteredList\n        });\n    }\n\n    onToggle = () => {\n        const wrapper = this.wrapperRef.current;\n        wrapper.classList.toggle('is-nav-open');\n    }\n\n    wrapperRef = React.createRef();\n\n    render () {      \n        \n        const { data, onFlagChange } = this.props;\n        const { favoriteList } = this.state;\n        console.log(data);\n\n        const items = favoriteList.map((e, index) => {\n            return <JokeBox jokeData={e} />\n        });\n        \n        return (\n            <div ref={this.wrapperRef} className=\"wrapper\">\n                \n                <div className=\"side-bar\">\n                    <span className=\"toggler\" onClick={this.onToggle}>Favorite</span>\n                    <div className=\"side-bar-content\">  \n                        <ItemList \n                        dataList={favoriteList} \n                        renderItem={(item) => <JokeBox jokeData={item} onFlagChange={onFlagChange} /> } />\n                    </div>\n                        \n                </div>\n                \n\n            </div>\n        );    \n    }\n}\n\nexport default SideBar;\n    ","import React, { Component } from 'react';\nimport './app.css';\nimport Jumbotron from '../jumbotron';\nimport ItemList from '../item-list';\nimport SideBar from '../side-bar';\nimport JokeBox from '../joke-box';\n\nimport { withService } from '../hoc';\n\n\nimport './app.css';\n\nclass App extends Component {    \n    \n    state = {\n        jokesData: [],\n        fetchOptions: {\n            selectedCategory: '',\n            label: ''\n        }\n    }\n\n    componentDidMount () {\n        this.fetchJoke();\n    }\n\n    fetchJoke = (...args) => {\n        const { getCategories, getRandomJoke, getJokeByCategory, getJokeBySearch } = this.props.service;\n        const { jokesData, fetchOptions: { selectedCategory, label } } = this.state;\n        \n        \n        if (selectedCategory) {\n            getJokeByCategory(selectedCategory)\n            .then((data) => {\n                if (data['id']) {\n                    const newData = [data, ...jokesData]\n                    this.setState({jokesData: newData});\n                }\n            });\n        }\n        else if (label) {\n            getJokeBySearch(label)\n            .then((data) => {\n                if (data['id']) {\n                    const newData = [data, ...jokesData]\n                    this.setState({jokesData: newData});\n                }\n            });\n        }\n        else {\n            getRandomJoke(...args)\n            .then((data) => {\n                if (data['id']) {\n                    const newData = [data, ...jokesData]\n                    this.setState({jokesData: newData});\n                }\n            });\n        }\n    }\n\n    onFlagChange = (id) => {\n        const { jokesData } = this.state;\n        const item = jokesData.find(e => e.id === id);\n        const indexJoke = jokesData.findIndex(e => e.id === id);\n        const value = item.favorite;\n        \n        item.favorite = !value; \n        this.setState({\n            jokesData: [\n                ...jokesData.slice(0, indexJoke), \n                item,\n                ...jokesData.slice(indexJoke + 1), \n              ]\n        })\n    }\n\n    onOptionsAdded = ({ selectedCategory, label }) => {\n        this.setState({ fetchOptions: { selectedCategory, label } })    \n    }\n\n    render () {\n        const { jokesData } = this.state;\n        console.log(jokesData);\n\n        const items = jokesData.map((el, index) => {\n            return <JokeBox jokeData={el} />\n        });\n\n        return (\n            <div className=\"layout\">\n\n                <div>\n                    <Jumbotron onJokesAdded={this.updateData} onOptionsAdded={this.onOptionsAdded}/>\n                    \n                    <div>\n                        <button\n                        className=\"get-button\" \n                        onClick={this.fetchJoke}>\n                            Get a joke\n                        </button>\n                    </div>\n\n                    <div className='item-list'>\n                        <ItemList \n                        dataList={jokesData} \n                        renderItem={(item) => <JokeBox jokeData={item} onFlagChange={this.onFlagChange} /> } \n                        />\n                    </div>\n                </div>\n\n                <SideBar \n                data={jokesData} \n                onFlagChange={this.onFlagChange}/> \n            </div>\n        );\n    }\n}\n\nexport default withService()(App);","import App from './app';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from './components/service-context';\nimport ChuckNorrisService from './services/chuckNorrisService';\nimport App from './components/app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider value={new ChuckNorrisService()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { getHoursAgo } from '../utils';\n\nexport default class ChuckNorrisService {\n\n    _apiBase = `https://api.chucknorris.io/jokes/`;\n\n    getResource = async (url) => {\n        const response = await fetch(`${this._apiBase}${url}`);\n        return await response.json();\n    }\n\n    _transformData = (response) => {\n        return {\n            id: response.id,\n            joke: response.value,\n            hoursAgo: getHoursAgo(response.updated_at),\n            category: response.categories,\n            url: response.url,\n            favorite: false\n        }\n    }\n\n\n    getCategories = async () => {\n        const res = await this.getResource('categories');\n        return res;            \n    }\n    \n    getRandomJoke = async () => {\n        const res = await this.getResource('random');\n        return this._transformData(res);\n    }\n\n    getJokeByCategory = async (category) => {\n        const res = await this.getResource(`random?category=${category}`);\n        return this._transformData(res);\n    }\n\n    getJokeBySearch = async (query) => {\n        const res = await this.getResource(`search?query=${query}`);\n        return this._transformData(res);\n    }\n\n}\n\n"],"sourceRoot":""}